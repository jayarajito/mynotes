Apache HTTP Server and Nginx are web servers, while Apache Tomcat is an application server, primarily for Java-based web applications. Apache HTTP Server is known for its extensive features, ease of configuration, and suitability for shared hosting environments. Nginx excels in handling static content and is often used as a reverse proxy or load balancer, particularly for high-traffic sites. Tomcat, on the other hand, is specifically designed to execute Java servlets and JSPs, making it a core component of many Java web applications. 
Here's a more detailed comparison:
Apache HTTP Server:
Type:
Web server. 
Function:
Serves static content (HTML, CSS, images, etc.) and can handle dynamic content through modules like PHP or Python. 
Features:
Extensive modularity, flexible configuration, good support for shared hosting. 
Use Cases:
Web servers for general purposes, shared hosting, serving a mix of static and dynamic content. 
NGINX:
Type:
Web server, reverse proxy, load balancer, and HTTP/2 proxy. 
Function:
Primarily designed for serving static content efficiently, but can also handle dynamic content through FastCGI, SCGI, or WSGI. 
Features:
High performance, low resource consumption, event-driven architecture, suitable for handling high-traffic sites. 
Use Cases:
Front-end reverse proxy for load balancing, serving static assets, handling high-traffic websites. 
Apache Tomcat:
Type:
Application server. 
Function:
A servlet container that executes Java servlets and JSPs, enabling dynamic web content processing. 
Features:
Java-specific, supports Java EE standards, acts as an intermediary between the web server and Java web applications. 
Use Cases:
Deploying and running Java-based web applications, serving dynamic content generated by Java code. 
Key Differences:
Type:
Web server vs. application server. 
Content Handling:
Apache HTTP Server and Nginx handle static and dynamic content, while Tomcat focuses on dynamic content generated by Java code. 
Performance:
Nginx is known for its high performance and efficiency, particularly in serving static content, while Apache HTTP Server is generally more flexible and can handle a broader range of scenarios. 
Architecture:
Apache HTTP Server uses a process-based architecture, while Nginx uses an event-driven architecture. 
Use Cases:
Apache HTTP Server is a general-purpose web server, Nginx is often used as a front-end reverse proxy or load balancer, and Tomcat is specifically designed for Java web applications. 




There are several other examples of app servers out there including JBoss, Glassfish, Weblogic, and Websphere